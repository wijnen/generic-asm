Plans:

- fix bugs with respect to linking multiple files
- allow setting a region for placement of a block of code
- check constraints
- create a disassembler from the definitions file
- implement all directives

For object files, a file format is needed.  Here it is:

- 4B Magic: "#\xfeof"
- 4B file format version: "\0\0\0\0".
- script data string.
- '\0'.
- rest of the file: Code.

Block types:
0 = absolute code.  extra data is start address.
1 = relative code.  must be placed by linker.  extra data is ignored.

linker script commands (all end with newline, '\x0a'):
?expression		if expression is non-zero
	commands	do commands
	:		else	(may be omitted)
	commands	do commands
	;		end if

name=expression		Define a symbol.  If name starts with '.', it is local to this block; if it starts with '@', it is local to this file.
+expression		Add a byte to the file.  expression must be between -0x80 and +0xff.
<expression		Set new origin for positioned block.  In case of overlapping absolute blocks, the last block's values are written.  If expression is empty, let linker determine position.
-			Act as if a new file starts.
>expression		Add expression bytes from Code to the file.  If used inside an if statement, the bytes are skipped if this command is skipped.
#comment		Ignored.

special symbols:
$	current position, counted from start of output file.  When data is added with this expression, the value used is that before the operation.

The linker positions blocks at < or - commands, and at the end of the script.  The remaining code (in string 1) is added to the last block.
